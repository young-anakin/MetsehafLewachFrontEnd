'use client';

import { useState, useEffect } from 'react';

interface CountdownProps {
  startDate: string;
}

export default function Countdown({ startDate }: CountdownProps) {
  const calculateTimeLeft = () => {
    const difference = +new Date(startDate) - +new Date();

    if (difference > 0) {
      return {
        days: Math.floor(difference / (1000 * 60 * 60 * 24)),
        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),
        minutes: Math.floor((difference / (1000 * 60)) % 60),
        seconds: Math.floor((difference / 1000) % 60),
      };
    }

    return null;
  };

  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());

  useEffect(() => {
    const timer = setInterval(() => {
      setTimeLeft(calculateTimeLeft());
    }, 1000);

    return () => clearInterval(timer);
  }, [startDate]);

  const renderCountdown = () => {
    if (!timeLeft) {
      return <span>Challenge has started!</span>;
    }

    return Object.entries(timeLeft).map(([interval, value]) => (
      <div key={interval} className="flex flex-col items-center">
        <span className="text-3xl font-bold">{value}</span>
        <span className="text-xs uppercase">{interval}</span>
      </div>
    ));
  };

  return (
    <div className="bg-gradient-to-r from-amber-100 to-amber-200 rounded-xl p-6 text-center space-y-4">
      <h2 className="text-xl font-semibold">Challenge Starts In</h2>
      <div className="flex justify-center space-x-4">
        {renderCountdown()}
      </div>
    </div>
  );
}
